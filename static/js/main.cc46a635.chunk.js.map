{"version":3,"sources":["card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","data","packageName","currency","price","features","map","plan","className","isEnabled","isBold","name","onClick","handleSubscribe","App","onSubscribe","console","log","alert","period","card","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAEe,SAASA,EAAKC,GAEzB,OACI,qBAAKC,MAAM,WAAX,SACI,qBAAKA,MAAM,oBAAX,SACI,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,mDAAV,SAA8DD,EAAME,KAAKC,cACzE,qBAAIF,MAAM,yBAAV,UAAoCD,EAAME,KAAKE,SAAUJ,EAAME,KAAKG,MAAM,sBAAMJ,MAAM,SAAZ,uBAC1E,uBACA,oBAAIA,MAAM,QAAV,SAGQD,EAAME,KAAKI,SAASC,KAAI,SAACC,GACrB,OAAQ,qBAAIC,UAAWD,EAAKE,UAAY,GAAK,aAArC,UACJ,sBAAMT,MAAM,QAAZ,SACI,mBAAGQ,UAAS,cAASD,EAAKE,UAAY,WAAa,gBAEnDF,EAAKG,OAAS,iCAASH,EAAKI,OAAiB,+BAAOJ,EAAKI,eAS7E,qBAAKX,MAAM,SAAX,SACI,wBAAQQ,UAAU,8BAClBI,QAAS,WAAOb,EAAMc,gBAAgBd,EAAME,KAAKC,cADjD,gC,MC4HTY,MArJf,WAEE,IA8HIC,EAAc,SAACR,GACjBS,QAAQC,IAAIV,GACZW,MAAK,iCAA4BX,EAA5B,uBAGP,OACE,yBAASP,MAAM,eAAf,SACE,qBAAKA,MAAM,YAAX,SACA,qBAAKA,MAAO,MAAZ,SAtIU,CACZ,CACEE,YAAc,OACdE,MAAQ,EACRD,SAAW,IACXgB,OAAS,QACTd,SAAW,CACT,CACEM,KAAO,cACPF,WAAY,GAEd,CACEE,KAAO,cACPF,WAAY,GAEd,CACEE,KAAO,4BACPF,WAAY,GAEd,CACEE,KAAO,mBACPF,WAAY,GAEd,CACEE,KAAO,6BACPF,WAAY,GAEd,CACEE,KAAO,0BACPF,WAAY,GAEd,CACEE,KAAO,iBACPF,WAAY,GAEd,CACEE,KAAO,yBACPF,WAAY,KAIlB,CACEP,YAAc,OACdE,MAAQ,EACRD,SAAW,IACXgB,OAAS,QACTd,SAAW,CACT,CACEM,KAAO,UACPF,WAAY,EACZC,QAAS,GAEX,CACEC,KAAO,eACPF,WAAY,GAEd,CACEE,KAAO,4BACPF,WAAY,GAEd,CACEE,KAAO,mBACPF,WAAY,GAEd,CACEE,KAAO,6BACPF,WAAY,GAEd,CACEE,KAAO,0BACPF,WAAY,GAEd,CACEE,KAAO,iBACPF,WAAY,GAEd,CACEE,KAAO,yBACPF,WAAY,KAIlB,CACEP,YAAc,MACdE,MAAQ,GACRD,SAAW,IACXgB,OAAS,QACTd,SAAW,CACT,CACEM,KAAO,kBACPF,WAAY,EACZC,QAAS,GAEX,CACEC,KAAO,gBACPF,WAAY,GAEd,CACEE,KAAO,4BACPF,WAAY,GAEd,CACEE,KAAO,mBACPF,WAAY,GAEd,CACEE,KAAO,6BACPF,WAAY,GAEd,CACEE,KAAO,0BACPF,WAAY,GAEd,CACEE,KAAO,4BACPF,WAAY,EACZC,QAAS,GAEX,CACEC,KAAO,yBACPF,WAAY,MAgBJH,KAAI,SAACc,GACX,OAAO,cAACtB,EAAD,CAAMG,KAAMmB,EAAMP,gBAAiBE,cCnIvCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cc46a635.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Card(props) {\r\n\r\n    return (\r\n        <div class=\"col-lg-4\">\r\n            <div class=\"card mb-5 mb-lg-0\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title text-muted text-uppercase text-center\">{props.data.packageName}</h5>\r\n                    <h6 class=\"card-price text-center\">{props.data.currency}{props.data.price}<span class=\"period\">/month</span></h6>\r\n                    <hr />\r\n                    <ul class=\"fa-ul\">\r\n\r\n                        {\r\n                            props.data.features.map((plan) => {\r\n                                return (<li className={plan.isEnabled ? '' : 'text-muted'}>\r\n                                    <span class=\"fa-li\">\r\n                                        <i className={`fas ${plan.isEnabled ? 'fa-check' : 'fa-times'}`}></i></span>\r\n                                    {\r\n                                        plan.isBold ? <strong>{plan.name}</strong> : <span>{plan.name}</span>\r\n                                    }\r\n\r\n                                </li>)\r\n                            })\r\n                        }\r\n\r\n\r\n                    </ul>\r\n                    <div class=\"d-grid\">\r\n                        <button className=\"btn btn-dark text-uppercase\" \r\n                        onClick={() => {props.handleSubscribe(props.data.packageName)}}>Subscribe</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport Card from './card';\nimport './App.css';\n\nfunction App() {\n\n  let details = [\n    {\n      packageName : \"FREE\",\n      price : 0,\n      currency : \"$\",\n      period : \"month\",\n      features : [\n        {\n          name : \"Single User\",\n          isEnabled : true\n        },\n        {\n          name : \"5GB Storage\",\n          isEnabled : true\n        },\n        {\n          name : \"Unlimited Public Projects\",\n          isEnabled : true\n        },\n        {\n          name : \"Community Access\",\n          isEnabled : true\n        },\n        {\n          name : \"Unlimited Private Projects\",\n          isEnabled : false\n        },\n        {\n          name : \"Dedicated Phone Support\",\n          isEnabled : false\n        },\n        {\n          name : \"Free Subdomain\",\n          isEnabled : false\n        },\n        {\n          name : \"Monthly Status Reports\",\n          isEnabled : false\n        }\n      ] \n    },\n    {\n      packageName : \"PLUS\",\n      price : 9,\n      currency : \"$\",\n      period : \"month\",\n      features : [\n        {\n          name : \"5 Users\",\n          isEnabled : true,\n          isBold : true\n        },\n        {\n          name : \"50GB Storage\",\n          isEnabled : true\n        },\n        {\n          name : \"Unlimited Public Projects\",\n          isEnabled : true\n        },\n        {\n          name : \"Community Access\",\n          isEnabled : true\n        },\n        {\n          name : \"Unlimited Private Projects\",\n          isEnabled : true\n        },\n        {\n          name : \"Dedicated Phone Support\",\n          isEnabled : true\n        },\n        {\n          name : \"Free Subdomain\",\n          isEnabled : true\n        },\n        {\n          name : \"Monthly Status Reports\",\n          isEnabled : false\n        }\n      ]\n    },\n    {\n      packageName : \"PRO\",\n      price : 49,\n      currency : \"$\",\n      period : \"month\",\n      features : [\n        {\n          name : \"Unlimited Users\",\n          isEnabled : true,\n          isBold : true\n        },\n        {\n          name : \"500GB Storage\",\n          isEnabled : true\n        },\n        {\n          name : \"Unlimited Public Projects\",\n          isEnabled : true\n        },\n        {\n          name : \"Community Access\",\n          isEnabled : true\n        },\n        {\n          name : \"Unlimited Private Projects\",\n          isEnabled : true\n        },\n        {\n          name : \"Dedicated Phone Support\",\n          isEnabled : true\n        },\n        {\n          name : \" Unlimited Free Subdomain\",\n          isEnabled : true,\n          isBold : true\n        },\n        {\n          name : \"Monthly Status Reports\",\n          isEnabled : true\n        }\n      ]\n    }\n  ]\n\n  let onSubscribe = (plan) => {\n    console.log(plan);\n    alert (`You have subscribed to ${plan} plan. Thank you!`)\n}\n  \n  return (\n    <section class=\"pricing py-5\">\n      <div class=\"container\">\n      <div class =\"row\">\n        {\n          details.map((card) => {\n            return <Card data={card} handleSubscribe={onSubscribe}></Card>\n          })\n        }\n      </div>\n      </div>\n    </section>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}